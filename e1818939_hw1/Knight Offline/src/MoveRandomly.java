
import java.util.Random;

//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : @Knight Offline
//  @ File Name : MoveRandomly.java
//  @ Date : @31.03.2015
//  @ Author : @Burak Araz
//
//
public class MoveRandomly extends Strategy {

    @Override
    public void act(Knight knight) {
        // TODO Auto-generated method stub

        Random rand = new Random();
        int chance = rand.nextInt(5);

        boolean touch = false;
        if (chance == 0 || knight.getSpecialFlag() == 1) {
            touch = knight.rangedAttack();
        } else if (knight.getSpecialFlag() != 1) {
            touch = knight.meleeAttack();
        }
        if (!touch) {
            Pair generatedPos = randomNumberGenerator(knight.getxPos(), knight.getyPos(), knight.getSpeed());

            knight.setxPos(generatedPos.x);
            knight.setyPos(generatedPos.y);

        }
    }

    public Pair moveCenter(int xPos, int yPos) {
        if (575 - xPos > 0) {
            xPos = xPos + 2;
        } else if (575 - xPos < 0) {
            xPos = xPos - 2;
        }

        if (yPos - 400 > 0) {
            yPos = yPos - 2;
        } else if (yPos - 400 < 0) {
            yPos = yPos + 2;
        }
        Pair pairPos = new Pair(xPos, yPos);
        return pairPos;
    }

    public Pair randomNumberGenerator(int xPos, int yPos, int speed) {
        Random rand = new Random();

        boolean check = true;

        while (true) {
            int num = rand.nextInt(8);

            // move right
            if (num == 0) {
                if (xPos <= 600) {
                    xPos = xPos + (speed / 25);
                    check = true;
                    break;

                }
            } // move up right
            else if (num == 1) {
                if (xPos <= 600 && yPos >= 350) {
                    xPos = xPos + (speed / 25);
                    yPos = yPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move up 
            else if (num == 2) {
                if (yPos >= 600) {
                    yPos = yPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move up left  
            else if (num == 3) {
                if (xPos >= 500 && yPos >= 350) {
                    xPos = xPos - (speed / 25);
                    yPos = yPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move left  
            else if (num == 4) {
                if (xPos >= 600) {
                    xPos = xPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move down left 
            else if (num == 5) {
                if (xPos >= 600 && yPos <= 450) {
                    xPos = xPos - (speed / 25);
                    yPos = yPos + (speed / 25);
                    check = true;
                    break;
                }
            } //move down 
            else if (num == 6) {
                if (yPos <= 450) {
                    yPos = yPos + (speed / 25);
                    check = true;
                    break;
                }
            } // move down right 
            else if (num == 7) {
                if (xPos <= 600 && yPos <= 450) {
                    xPos = xPos + (speed / 25);
                    yPos = yPos + (speed / 25);
                    check = true;
                    break;
                }
            }
            if ((xPos >= 500 && xPos <= 600) || (yPos >= 350 && yPos <= 450)) {
                xPos = randomMove(xPos, yPos, speed).x;
                yPos = randomMove(xPos, yPos, speed).y;
                break;
            }
        }
        Pair pairPos = new Pair(xPos, yPos);
        return pairPos;
    }

    public Pair randomMove(int xPos, int yPos, int speed) {
        Random rand = new Random();

        boolean check = true;

        while (true) {
            int num = rand.nextInt(8);

            // move right
            if (num == 0) {
                if (xPos < 1050) {
                    xPos = xPos + (speed / 25);
                    check = true;
                    break;

                }
            } // move up right
            else if (num == 1) {
                if (xPos < 1050 && yPos > 15) {
                    xPos = xPos + (speed / 25);
                    yPos = yPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move up 
            else if (num == 2) {
                if (yPos > 15) {
                    yPos = yPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move up left  
            else if (num == 3) {
                if (xPos > 30 && yPos > 15) {
                    xPos = xPos - (speed / 25);
                    yPos = yPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move left  
            else if (num == 4) {
                if (xPos > 30) {
                    xPos = xPos - (speed / 25);
                    check = true;
                    break;
                }
            } // move down left 
            else if (num == 5) {
                if (xPos > 30 && yPos < 700) {
                    xPos = xPos - (speed / 25);
                    yPos = yPos + (speed / 25);
                    check = true;
                    break;
                }
            } //move down 
            else if (num == 6) {
                if (yPos < 700) {
                    yPos = yPos + (speed / 25);
                    check = true;
                    break;
                }
            } // move down right 
            else if (num == 7) {
                if (xPos < 1050 && yPos < 700) {
                    xPos = xPos + (speed / 25);
                    yPos = yPos + (speed / 25);
                    check = true;
                    break;
                }
            }
        }
        Pair pairPos = new Pair(xPos, yPos);
        return pairPos;
    }
}
